// pipeline {
//     agent any
    
//     tools {nodejs "node 14"}

//     // environment {
//     //     DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials') 
//     // }

//     stages {
//         stage('Checkout') {
//             steps {
//                 checkout scm
//             }
//         }
//         stage('Build and Start Services') {
//             steps {
//                 dir('all_in_docker') {
//                     script {
//                         sh 'docker-compose build'
//                         sh 'docker-compose up -d'
//                     }
//                 }
//             }
//         }
//         stage('Install Dependencies') {
//             steps {
//                 dir('all_in_docker/client') {
//                 script {
//                         sh 'npm install'
//                 }
//             }
//             }
//         }
//         stage('Build') {
//             steps {
//                 dir('all_in_docker/client') {
//                     script {
//                         sh 'CI=false npm run build'
//                     }
//                 }
//             }
//         }
//     }

//     post {
//         always {
//             cleanWs() 
//         }
//         success {
//             echo 'Pipeline succeeded!'
//         }
//         failure {
//             echo 'Pipeline failed!'
//         }
//     }
// }
pipeline {
    agent any

    tools {dockerTool "docker"}

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials') // Jenkins credentials ID for Docker Hub
        DOCKERHUB_REPO = 'samil88/frontend'
        DOCKER_IMAGE_TAG = 'latest'
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone your repository
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                dir('all_in_docker/client') {
                    script {
                        dockerImage = docker.build("${DOCKERHUB_REPO}:${DOCKER_IMAGE_TAG}")
                    }
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        dockerImage.push()
                    }
                }
            }
        }
    }
    
    post {
        always {
            // Clean up Docker images to free up space
            sh "docker rmi ${DOCKERHUB_REPO}:${DOCKER_IMAGE_TAG} || true"
        }
    }
}
